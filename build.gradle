plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'its'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'javax.servlet', module: 'servlet-api'
        exclude group: 'javax.servlet', module: 'javax.servlet-api'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.egovframe.go.kr/maven'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // * * * querydsl * * *
    implementation 'com.querydsl:querydsl-core' // querydsl
    implementation 'com.querydsl:querydsl-jpa' // querydsl

    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    // security 설정
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'com.auth0:java-jwt:3.14.0'
    
    // 데이터베이스
    runtimeOnly 'com.mysql:mysql-connector-j'

    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // POI
    implementation 'org.apache.poi:poi:3.17'
    implementation 'org.apache.poi:poi-ooxml:3.17'
    implementation 'org.apache.tika:tika-core:2.7.0'

    // commons 및 유틸리티
    implementation 'org.apache.commons:commons-lang3'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'

    // logback
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.2.9'
    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.9'
    
    // 명시적으로 서블릿 API 버전 지정
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
}

// * * * querydsl * * *
def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}

tasks.named('test') {
    useJUnitPlatform()
}
